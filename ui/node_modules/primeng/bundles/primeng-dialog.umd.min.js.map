{"version":3,"sources":["ng://primeng/dialog/dialog.ts"],"names":["idx","showAnimation","animation","style","transform","opacity","animate","hideAnimation","Dialog","el","renderer","zone","cd","this","draggable","resizable","closeOnEscape","closable","showHeader","blockScroll","autoZIndex","baseZIndex","minX","minY","focusOnShow","keepInViewport","focusTrap","transitionOptions","closeIcon","minimizeIcon","maximizeIcon","onShow","EventEmitter","onHide","visibleChange","onResizeInit","onResizeEnd","id","_style","_position","transformOptions","Object","defineProperty","prototype","_positionLeft","console","log","_positionTop","_responsive","_breakpoint","_visible","value","maskVisible","__assign","originalStyle","focus","focusable","DomHandler","findSingle","container","runOutsideAngular","setTimeout","close","event","emit","preventDefault","enableModality","_this","dismissableMask","maskClickListener","listen","wrapper","isSameNode","target","contains","modal","addClass","document","body","disableModality","unbindMaskClickListener","removeClass","destroyed","detectChanges","maximize","maximized","moveOnTop","zIndex","String","zindex","getMaskClass","maskClass","ui-dialog-mask","ui-widget-overlay","ui-dialog-visible","ui-dialog-mask-scrollblocker","getPositionClass","toString","pos","find","item","position","initDrag","hasClass","parentElement","dragging","lastPageX","pageX","lastPageY","pageY","margin","onKeydown","which","focusableElements","getFocusableElements","length","activeElement","focusedIndex","indexOf","shiftKey","onDrag","containerWidth","getOuterWidth","containerHeight","getOuterHeight","deltaX","deltaY","offset","getOffset","leftPos","left","topPos","top","viewport","getViewport","width","height","endDrag","resetPosition","initResize","resizing","onResize","contentHeight","contentViewChild","nativeElement","newWidth","newHeight","minWidth","minHeight","parseInt","resizeEnd","bindGlobalListeners","bindDocumentDragListener","bindDocumentDragEndListener","bindDocumentResizeListeners","bindDocumentEscapeListener","unbindGlobalListeners","unbindDocumentDragListener","unbindDocumentDragEndListener","unbindDocumentResizeListeners","unbindDocumentEscapeListener","documentDragListener","bind","window","addEventListener","removeEventListener","documentDragEndListener","documentResizeListener","documentResizeEndListener","documentEscapeListener","appendContainer","appendTo","appendChild","restoreAppend","onAnimationStart","toState","element","onAnimationEnd","onContainerDestroy","ngOnDestroy","ElementRef","Renderer2","NgZone","ChangeDetectorRef","__decorate","Input","ContentChildren","Header","descendants","Footer","ViewChild","Output","Component","selector","template","animations","trigger","transition","useAnimation","changeDetection","ChangeDetectionStrategy","Default","DialogModule","NgModule","imports","CommonModule","FocusTrapModule","exports","SharedModule","declarations"],"mappings":"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","sourcesContent":["import {NgModule,Component,ElementRef,OnDestroy,Input,Output,EventEmitter,Renderer2,\n    ContentChildren,QueryList,ViewChild,NgZone, ChangeDetectorRef,ViewRef,ChangeDetectionStrategy} from '@angular/core';\nimport {trigger,style,transition,animate, AnimationEvent, animation, useAnimation} from '@angular/animations';\nimport {CommonModule} from '@angular/common';\nimport {DomHandler} from 'primeng/dom';\nimport {Header,Footer,SharedModule} from 'primeng/api';\nimport {FocusTrapModule} from 'primeng/focustrap';\n\nlet idx: number = 0;\n\nconst showAnimation = animation([\n    style({ transform: '{{transform}}', opacity: 0 }),\n    animate('{{transition}}', style({ transform: 'none', opacity: 1 }))\n]);\n\nconst hideAnimation = animation([\n    animate('{{transition}}', style({ transform: '{{transform}}', opacity: 0 }))\n]);\n\n@Component({\n    selector: 'p-dialog',\n    template: `\n        <div [class]=\"maskStyleClass\" [ngClass]=\"getMaskClass()\" *ngIf=\"maskVisible\">\n            <div #container [ngClass]=\"{'ui-dialog ui-widget ui-widget-content ui-corner-all ui-shadow':true, 'ui-dialog-rtl':rtl,'ui-dialog-draggable':draggable,'ui-dialog-resizable':resizable, 'ui-dialog-maximized': maximized}\"\n                [ngStyle]=\"style\" [class]=\"styleClass\" *ngIf=\"visible\" pFocusTrap [pFocusTrapDisabled]=\"focusTrap === false\"\n                [@animation]=\"{value: 'visible', params: {transform: transformOptions, transition: transitionOptions}}\" (@animation.start)=\"onAnimationStart($event)\" (@animation.done)=\"onAnimationEnd($event)\" role=\"dialog\" [attr.aria-labelledby]=\"id + '-label'\">\n                <div #titlebar class=\"ui-dialog-titlebar ui-widget-header ui-helper-clearfix ui-corner-top\" (mousedown)=\"initDrag($event)\" *ngIf=\"showHeader\">\n                    <span [attr.id]=\"id + '-label'\" class=\"ui-dialog-title\" *ngIf=\"header\">{{header}}</span>\n                    <span [attr.id]=\"id + '-label'\" class=\"ui-dialog-title\" *ngIf=\"headerFacet && headerFacet.first\">\n                        <ng-content select=\"p-header\"></ng-content>\n                    </span>\n                    <div class=\"ui-dialog-titlebar-icons\">\n                        <a *ngIf=\"maximizable\" [ngClass]=\"{'ui-dialog-titlebar-icon ui-dialog-titlebar-maximize ui-corner-all':true}\" tabindex=\"0\" role=\"button\" (click)=\"maximize()\" (keydown.enter)=\"maximize()\">\n                            <span [ngClass]=\"maximized ? minimizeIcon : maximizeIcon\"></span>\n                        </a>\n                        <a *ngIf=\"closable\" [ngClass]=\"{'ui-dialog-titlebar-icon ui-dialog-titlebar-close ui-corner-all':true}\" tabindex=\"0\" role=\"button\" (click)=\"close($event)\" (keydown.enter)=\"close($event)\">\n                            <span [class]=\"closeIcon\"></span>\n                        </a>\n                    </div>\n                </div>\n                <div #content class=\"ui-dialog-content ui-widget-content\" [ngStyle]=\"contentStyle\">\n                    <ng-content></ng-content>\n                </div>\n                <div #footer class=\"ui-dialog-footer ui-widget-content\" *ngIf=\"footerFacet && footerFacet.first\">\n                    <ng-content select=\"p-footer\"></ng-content>\n                </div>\n                <div *ngIf=\"resizable\" class=\"ui-resizable-handle ui-resizable-se ui-icon ui-icon-gripsmall-diagonal-se\" style=\"z-index: 90;\" (mousedown)=\"initResize($event)\"></div>\n            </div>\n        </div>\n    `,\n    animations: [\n        trigger('animation', [\n            transition('void => visible', [\n                useAnimation(showAnimation)\n            ]),\n            transition('visible => void', [\n                useAnimation(hideAnimation)\n            ])\n        ])\n    ],\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class Dialog implements OnDestroy {\n\n    @Input() header: string;\n\n    @Input() draggable: boolean = true;\n\n    @Input() resizable: boolean = true;\n\n\n    @Input() get positionLeft(): number {\n        return 0;\n    };\n\n    set positionLeft(_positionLeft: number) {\n        console.log(\"positionLeft property is deprecated.\");\n    }\n\n    @Input() get positionTop(): number {\n        return 0;\n    };\n\n    set positionTop(_positionTop: number) {\n        console.log(\"positionTop property is deprecated.\");\n    }\n\n    @Input() contentStyle: any;\n\n    @Input() modal: boolean;\n\n    @Input() closeOnEscape: boolean = true;\n\n    @Input() dismissableMask: boolean;\n\n    @Input() rtl: boolean;\n\n    @Input() closable: boolean = true;\n\n    @Input() get responsive(): boolean {\n        return false;\n    };\n\n    set responsive(_responsive: boolean) {\n        console.log(\"Responsive property is deprecated.\");\n    }\n\n    @Input() appendTo: any;\n\n    @Input() styleClass: string;\n\n    @Input() maskStyleClass: string;\n\n    @Input() showHeader: boolean = true;\n\n    @Input() get breakpoint(): number {\n        return 649;\n    };\n\n    set breakpoint(_breakpoint: number) {\n        console.log(\"Breakpoint property is not utilized and deprecated, use CSS media queries instead.\");\n    }\n\n    @Input() blockScroll: boolean = false;\n\n    @Input() autoZIndex: boolean = true;\n\n    @Input() baseZIndex: number = 0;\n\n    @Input() minX: number = 0;\n\n    @Input() minY: number = 0;\n\n    @Input() focusOnShow: boolean = true;\n\n    @Input() maximizable: boolean;\n\n    @Input() keepInViewport: boolean = true;\n\n    @Input() focusTrap: boolean = true;\n\n    @Input() transitionOptions: string = '150ms cubic-bezier(0, 0, 0.2, 1)';\n\n    @Input() closeIcon: string = 'pi pi-times';\n\n    @Input() minimizeIcon: string = 'pi pi-window-minimize';\n\n    @Input() maximizeIcon: string = 'pi pi-window-maximize';\n\n    @ContentChildren(Header, {descendants: false}) headerFacet: QueryList<Header>;\n\n    @ContentChildren(Footer, {descendants: false}) footerFacet: QueryList<Header>;\n\n    @ViewChild('titlebar') headerViewChild: ElementRef;\n\n    @ViewChild('content') contentViewChild: ElementRef;\n\n    @ViewChild('footer') footerViewChild: ElementRef;\n\n    @Output() onShow: EventEmitter<any> = new EventEmitter();\n\n    @Output() onHide: EventEmitter<any> = new EventEmitter();\n\n    @Output() visibleChange:EventEmitter<any> = new EventEmitter();\n\n    @Output() onResizeInit: EventEmitter<any> = new EventEmitter();\n\n    @Output() onResizeEnd: EventEmitter<any> = new EventEmitter();\n\n    _visible: boolean;\n\n    maskVisible: boolean;\n\n    container: HTMLDivElement;\n\n    wrapper: HTMLElement;\n\n    dragging: boolean;\n\n    documentDragListener: any;\n\n    documentDragEndListener: any;\n\n    resizing: boolean;\n\n    documentResizeListener: any;\n\n    documentResizeEndListener: any;\n\n    documentEscapeListener: Function;\n\n    maskClickListener: Function;\n\n    lastPageX: number;\n\n    lastPageY: number;\n\n    preventVisibleChangePropagation: boolean;\n\n    maximized: boolean;\n\n    preMaximizeContentHeight: number;\n\n    preMaximizeContainerWidth: number;\n\n    preMaximizeContainerHeight: number;\n\n    preMaximizePageX: number;\n\n    preMaximizePageY: number;\n\n    id: string = `ui-dialog-${idx++}`;\n\n    _style: any = {};\n\n    _position: string = \"center\";\n\n    originalStyle: any;\n\n    transformOptions: any = \"scale(0.7)\";\n\n    constructor(public el: ElementRef, public renderer: Renderer2, public zone: NgZone, private cd: ChangeDetectorRef) { }\n\n    @Input() get visible(): any {\n        return this._visible;\n    }\n    set visible(value:any) {\n        this._visible = value;\n\n        if (this._visible && !this.maskVisible) {\n            this.maskVisible = true;\n        }\n    }\n\n    @Input() get style(): any {\n        return this._style;\n    }\n    set style(value:any) {\n        if (value) {\n            this._style = {...value};\n            this.originalStyle = value;\n        }\n    }\n\n    @Input() get position(): string {\n        return this._position;\n    };\n\n    set position(value: string) {\n        this._position = value;\n\n        switch (value) {\n            case 'topleft':\n            case 'bottomleft':\n            case 'left':\n                this.transformOptions = \"translate3d(-100%, 0px, 0px)\";\n            break;\n            case 'topright':\n            case 'bottomright':\n            case 'right':\n                this.transformOptions = \"translate3d(100%, 0px, 0px)\";\n            break;\n            case 'bottom':\n                this.transformOptions = \"translate3d(0px, 100%, 0px)\";\n            break;\n            case 'top':\n                this.transformOptions = \"translate3d(0px, -100%, 0px)\";\n            break;\n            default:\n                this.transformOptions = \"scale(0.7)\";\n            break;\n        }\n    }\n\n    focus() {\n        let focusable = DomHandler.findSingle(this.container, 'button');\n        if (focusable) {\n            this.zone.runOutsideAngular(() => {\n                setTimeout(() => focusable.focus(), 5);\n            });\n        }\n    }\n\n    close(event: Event) {\n        this.visibleChange.emit(false);\n        event.preventDefault();\n    }\n\n    enableModality() {\n        if (this.closable && this.dismissableMask) {\n            this.maskClickListener = this.renderer.listen(this.wrapper, 'click', (event: any) => {\n                if (!this.container.isSameNode(event.target) && !this.container.contains(event.target)) {\n                    this.close(event);\n                }\n            });\n        }\n\n        if (this.modal) {\n            DomHandler.addClass(document.body, 'ui-overflow-hidden');\n        }\n    }\n\n    disableModality() {\n        if (this.wrapper) {\n            if (this.dismissableMask) {\n                this.unbindMaskClickListener();\n            }\n\n            if (this.modal) {\n                DomHandler.removeClass(document.body, 'ui-overflow-hidden');\n            }\n\n            if (!(this.cd as ViewRef).destroyed) {\n                this.cd.detectChanges();\n            }\n        }\n    }\n\n    maximize() {\n        this.maximized = !this.maximized;\n\n        if (!this.modal && !this.blockScroll) {\n            if (this.maximized)\n                DomHandler.addClass(document.body, 'ui-overflow-hidden');\n            else\n                DomHandler.removeClass(document.body, 'ui-overflow-hidden');\n        }\n    }\n\n    unbindMaskClickListener() {\n        if (this.maskClickListener) {\n            this.maskClickListener();\n            this.maskClickListener = null;\n        }\n    }\n\n    moveOnTop() {\n        if (this.autoZIndex) {\n            this.container.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\n            this.wrapper.style.zIndex = String(this.baseZIndex + (DomHandler.zindex - 1));\n        }\n    }\n\n    getMaskClass() {\n        let maskClass = {'ui-dialog-mask': true, 'ui-widget-overlay': this.modal, 'ui-dialog-visible': this.maskVisible, 'ui-dialog-mask-scrollblocker': this.modal || this.blockScroll};\n        maskClass[this.getPositionClass().toString()] = true;\n        return maskClass;\n    }\n\n    getPositionClass() {\n        const positions = ['left', 'right', 'top', 'topleft', 'topright', 'bottom', 'bottomleft', 'bottomright'];\n        const pos = positions.find(item => item === this.position);\n\n        return pos ? `ui-dialog-${pos}` : '';\n    }\n\n    initDrag(event: MouseEvent) {\n        if (DomHandler.hasClass(event.target, 'ui-dialog-titlebar-icon') ||Â DomHandler.hasClass((<HTMLElement> event.target).parentElement, 'ui-dialog-titlebar-icon')) {\n            return;\n        }\n\n        if (this.draggable) {\n            this.dragging = true;\n            this.lastPageX = event.pageX;\n            this.lastPageY = event.pageY;\n\n            this.container.style.margin = '0';\n            DomHandler.addClass(document.body, 'ui-unselectable-text');\n        }\n    }\n\n    onKeydown(event: KeyboardEvent) {\n        if (this.focusTrap) {\n            if (event.which === 9) {\n                event.preventDefault();\n\n                let focusableElements = DomHandler.getFocusableElements(this.container);\n\n                if (focusableElements && focusableElements.length > 0) {\n                    if (!document.activeElement) {\n                        focusableElements[0].focus();\n                    }\n                    else {\n                        let focusedIndex = focusableElements.indexOf(document.activeElement);\n\n                        if (event.shiftKey) {\n                            if (focusedIndex == -1 || focusedIndex === 0)\n                                focusableElements[focusableElements.length - 1].focus();\n                            else\n                                focusableElements[focusedIndex - 1].focus();\n                        }\n                        else {\n                            if (focusedIndex == -1 || focusedIndex === (focusableElements.length - 1))\n                                focusableElements[0].focus();\n                            else\n                                focusableElements[focusedIndex + 1].focus();\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    onDrag(event: MouseEvent) {\n        if (this.dragging) {\n            let containerWidth = DomHandler.getOuterWidth(this.container);\n            let containerHeight = DomHandler.getOuterHeight(this.container);\n            let deltaX = event.pageX - this.lastPageX;\n            let deltaY = event.pageY - this.lastPageY;\n            let offset = DomHandler.getOffset(this.container);\n            let leftPos = offset.left + deltaX;\n            let topPos = offset.top + deltaY;\n            let viewport = DomHandler.getViewport();\n\n            this.container.style.position = 'fixed';\n\n            if (this.keepInViewport) {\n                if (leftPos >= this.minX && (leftPos + containerWidth) < viewport.width) {\n                    this._style.left = leftPos + 'px';\n                    this.lastPageX = event.pageX;\n                    this.container.style.left = leftPos + 'px';\n                }\n\n                if (topPos >= this.minY && (topPos + containerHeight) < viewport.height) {\n                    this._style.top = topPos + 'px';\n                    this.lastPageY = event.pageY;\n                    this.container.style.top = topPos + 'px';\n                }\n            }\n            else {\n                this.lastPageX = event.pageX;\n                this.container.style.left = leftPos + 'px';\n                this.lastPageY = event.pageY;\n                this.container.style.top = topPos + 'px';\n            }\n        }\n    }\n\n    endDrag(event: MouseEvent) {\n        if (this.draggable) {\n            this.dragging = false;\n            DomHandler.removeClass(document.body, 'ui-unselectable-text');\n            this.cd.detectChanges();\n        }\n    }\n\n    resetPosition() {\n        this.container.style.position = '';\n        this.container.style.left = '';\n        this.container.style.top = '';\n        this.container.style.margin = '';\n    }\n\n    initResize(event: MouseEvent) {\n        if (this.resizable) {\n            this.resizing = true;\n            this.lastPageX = event.pageX;\n            this.lastPageY = event.pageY;\n            DomHandler.addClass(document.body, 'ui-unselectable-text');\n            this.onResizeInit.emit(event);\n        }\n    }\n\n    onResize(event: MouseEvent) {\n        if (this.resizing) {\n            let deltaX = event.pageX - this.lastPageX;\n            let deltaY = event.pageY - this.lastPageY;\n            let containerWidth = DomHandler.getOuterWidth(this.container);\n            let containerHeight = DomHandler.getOuterHeight(this.container);\n            let contentHeight = DomHandler.getOuterHeight(this.contentViewChild.nativeElement);\n            let newWidth = containerWidth + deltaX;\n            let newHeight = containerHeight + deltaY;\n            let minWidth = this.container.style.minWidth;\n            let minHeight = this.container.style.minHeight;\n            let offset = DomHandler.getOffset(this.container);\n            let viewport = DomHandler.getViewport();\n\n            if ((!minWidth || newWidth > parseInt(minWidth)) && (offset.left + newWidth) < viewport.width) {\n                this._style.width = newWidth + 'px';\n                this.container.style.width = this._style.width;\n            }\n\n            if ((!minHeight || newHeight > parseInt(minHeight)) && (offset.top + newHeight) < viewport.height) {\n                this.contentViewChild.nativeElement.style.height = contentHeight + deltaY + 'px';\n            }\n\n            this.lastPageX = event.pageX;\n            this.lastPageY = event.pageY;\n        }\n    }\n\n    resizeEnd(event) {\n        if (this.resizing) {\n            this.resizing = false;\n            DomHandler.removeClass(document.body, 'ui-unselectable-text');\n            this.onResizeEnd.emit(event);\n        }\n    }\n\n    bindGlobalListeners() {\n        if (this.draggable) {\n            this.bindDocumentDragListener();\n            this.bindDocumentDragEndListener();\n        }\n\n        if (this.resizable) {\n            this.bindDocumentResizeListeners();\n        }\n\n        if (this.closeOnEscape && this.closable) {\n            this.bindDocumentEscapeListener();\n        }\n    }\n\n    unbindGlobalListeners() {\n        this.unbindDocumentDragListener();\n        this.unbindDocumentDragEndListener();\n        this.unbindDocumentResizeListeners();\n        this.unbindDocumentEscapeListener();\n    }\n\n    bindDocumentDragListener() {\n        this.zone.runOutsideAngular(() => {\n            this.documentDragListener = this.onDrag.bind(this);\n            window.document.addEventListener('mousemove', this.documentDragListener);\n        });\n    }\n\n    unbindDocumentDragListener() {\n        if (this.documentDragListener) {\n            window.document.removeEventListener('mousemove', this.documentDragListener);\n            this.documentDragListener = null;\n        }\n    }\n\n    bindDocumentDragEndListener() {\n        this.zone.runOutsideAngular(() => {\n            this.documentDragEndListener = this.endDrag.bind(this);\n            window.document.addEventListener('mouseup', this.documentDragEndListener);\n        });\n    }\n\n    unbindDocumentDragEndListener() {\n        if (this.documentDragEndListener) {\n            window.document.removeEventListener('mouseup', this.documentDragEndListener);\n            this.documentDragEndListener = null;\n        }\n    }\n\n    bindDocumentResizeListeners() {\n        this.zone.runOutsideAngular(() => {\n            this.documentResizeListener = this.onResize.bind(this);\n            this.documentResizeEndListener = this.resizeEnd.bind(this);\n            window.document.addEventListener('mousemove', this.documentResizeListener);\n            window.document.addEventListener('mouseup', this.documentResizeEndListener);\n        });\n    }\n\n    unbindDocumentResizeListeners() {\n        if (this.documentResizeListener && this.documentResizeEndListener) {\n            window.document.removeEventListener('mousemove', this.documentResizeListener);\n            window.document.removeEventListener('mouseup', this.documentResizeEndListener);\n            this.documentResizeListener = null;\n            this.documentResizeEndListener = null;\n        }\n    }\n\n    bindDocumentEscapeListener() {\n        this.documentEscapeListener = this.renderer.listen('document', 'keydown', (event) => {\n            if (event.which == 27) {\n                if (parseInt(this.container.style.zIndex) === (DomHandler.zindex + this.baseZIndex)) {\n                    this.close(event);\n                }\n            }\n        });\n    }\n\n    unbindDocumentEscapeListener() {\n        if (this.documentEscapeListener) {\n            this.documentEscapeListener();\n            this.documentEscapeListener = null;\n        }\n    }\n\n    appendContainer() {\n        if (this.appendTo) {\n            if (this.appendTo === 'body')\n                document.body.appendChild(this.wrapper);\n            else\n                DomHandler.appendChild(this.wrapper, this.appendTo);\n        }\n    }\n\n    restoreAppend() {\n        if (this.container && this.appendTo) {\n            this.el.nativeElement.appendChild(this.wrapper);\n        }\n    }\n\n    onAnimationStart(event: AnimationEvent) {\n        switch(event.toState) {\n            case 'visible':\n                this.container = event.element;\n                this.wrapper = this.container.parentElement;\n                this.onShow.emit({});\n                this.appendContainer();\n                this.moveOnTop();\n                this.bindGlobalListeners();\n\n                if (this.modal) {\n                    this.enableModality();\n                }\n\n                if (!this.modal && this.blockScroll) {\n                    DomHandler.addClass(document.body, 'ui-overflow-hidden');\n                }\n\n                if (this.focusOnShow) {\n                    this.focus();\n                }\n            break;\n        }\n    }\n\n    onAnimationEnd(event: AnimationEvent) {\n        switch(event.toState) {\n            case 'void':\n                this.onContainerDestroy();\n                this.onHide.emit({});\n            break;\n        }\n    }\n\n    onContainerDestroy() {\n        this.unbindGlobalListeners();\n        this.dragging = false;\n\n        this.maskVisible = false;\n\n        if (this.maximized) {\n            DomHandler.removeClass(document.body, 'ui-overflow-hidden');\n            this.maximized = false;\n        }\n\n        if (this.modal) {\n            this.disableModality();\n        }\n\n        if (this.blockScroll) {\n            DomHandler.removeClass(document.body, 'ui-overflow-hidden');\n        }\n\n        this.container = null;\n        this.wrapper = null;\n\n        this._style = this.originalStyle ? {...this.originalStyle} : {};\n    }\n\n    ngOnDestroy() {\n        if (this.container) {\n            this.restoreAppend();\n            this.onContainerDestroy();\n        }\n    }\n\n}\n\n@NgModule({\n    imports: [CommonModule,FocusTrapModule],\n    exports: [Dialog,SharedModule],\n    declarations: [Dialog]\n})\nexport class DialogModule { }\n"]}