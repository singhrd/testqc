{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/bar-chart-widget/bar-chart-widget.component.ts","webpack:///src/app/bar-chart-widget/bar-chart-widget.component.html","webpack:///src/app/charts/line-chart/line-chart.component.ts","webpack:///src/app/charts/line-chart/line-chart.component.html","webpack:///src/app/charts/stacked-bar-chart/stacked-bar-chart.component.ts","webpack:///src/app/charts/stacked-bar-chart/stacked-bar-chart.component.html","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/line-chart-widget/line-chart-widget.component.ts","webpack:///src/app/line-chart-widget/line-chart-widget.component.html","webpack:///src/app/models/data-types.ts","webpack:///src/app/services/covid-report.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","BarChartWidgetComponent","service","locations","snapshots","normalizations","yAxisTitles","selectedLocation","selectedSnapshot","selectedNormalization","yAxisTitle","dataSet","dataLabels","displayData","getCovidResults","subscribe","res","forEach","entry","push","date","active","recovered","deaths","activeNormalized","recoveredNormalized","deathsNormalized","loc","populateDataSet","snapshot","normalization","idx","encapsulation","None","LineChartComponent","alive","chart","console","log","anychart","line","data","set","getData","seriesData_1","mapAs","seriesData_2","seriesData_3","animation","padding","crosshair","enabled","yLabel","yStroke","tooltip","positionMode","yAxis","xAxis","labels","series_1","name","hovered","markers","type","size","position","anchor","offsetX","offsetY","series_2","series_3","legend","fontSize","container","draw","remove","destroyChart","generateChart","StackedBarChartComponent","renderer","el","inputDataSet","graphics","useAbsoluteReferences","column","yScale","stackMode","inputDataLabels","length","x","value","label","inverted","format","ylabel","interactivity","hoverMode","displayMode","useHtml","unionFormat","total","tip","points","element","seriesName","toLocaleString","setProperty","nativeElement","uuid","DashboardComponent","LineChartWidgetComponent","availableLocations","selectedLocations","windowsAvailable","selectedWindow","metrics","selectedMetric","chartDescriptions","chartDescriptionText","noChartData","createMultiselectLabels","window","metric","requestArray","getAnnotations","allResponses","i","arr","Array","elements","j","metricData","movingAverageGrowthRate","movingAverageEstimatedAlpha","movingAverageDeathRate","movingAverageControlAssessment","filter","windowInfo","arr2","concat","err","seriesData","series","replace","toLocaleUpperCase","col","locationsMultiselect","country","hidePanel","ResultsPerDate","ResultMessage","LocationsByCountryName","CovidReportService","http","location","get","providedIn","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'quarantine-pilot-covid-19';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { MultiSelectModule } from 'primeng/multiselect';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { BarChartWidgetComponent } from './bar-chart-widget/bar-chart-widget.component';\nimport { StackedBarChartComponent } from './charts/stacked-bar-chart/stacked-bar-chart.component';\nimport { CovidReportService } from './services/covid-report.service';\nimport { LineChartWidgetComponent } from './line-chart-widget/line-chart-widget.component';\nimport { LineChartComponent } from './charts/line-chart/line-chart.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    BarChartWidgetComponent,\n    StackedBarChartComponent,\n    LineChartWidgetComponent,\n    LineChartComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    MultiSelectModule\n  ],\n  providers: [CovidReportService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, ViewEncapsulation, Input } from '@angular/core';\nimport { CovidReportService } from '../services/covid-report.service';\nimport { ResultMessage, LocationsByCountryName } from '../models/data-types';\n\n@Component({\n  selector: 'app-bar-chart-widget',\n  templateUrl: './bar-chart-widget.component.html',\n  styleUrls: ['./bar-chart-widget.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class BarChartWidgetComponent implements OnInit {\n\n  @Input() uuid: string;\n\n  locations = LocationsByCountryName;\n  snapshots = ['daily', 'cumulative'];\n  normalizations = ['absolute', 'per-capita'];\n  yAxisTitles = ['Cases', 'Cases per capita'];\n\n  selectedLocation = 'US';\n  selectedSnapshot = this.snapshots[0];\n  selectedNormalization = this.normalizations[1];\n  yAxisTitle = this.yAxisTitles[1];\n\n  dataSet = [];\n  dataLabels = ['Date', 'Active', 'Recovered', 'Deaths'];\n\n  constructor(private service: CovidReportService) { }\n\n  /**\n   * Populate the data set for for a given location.\n   */\n  populateDataSet(): void {\n    const displayData = [];\n    this.service.getCovidResults(this.selectedLocation, this.selectedSnapshot).subscribe((res: ResultMessage) => {\n      if (res.snapshots) {\n        res.snapshots.forEach(entry => {\n          if (this.selectedNormalization === 'absolute') {\n            displayData.push([entry.date, entry.active, entry.recovered, entry.deaths]);\n          } else {\n            displayData.push([entry.date, entry.activeNormalized, entry.recoveredNormalized, entry.deathsNormalized]);\n          }\n        });\n        this.dataSet = displayData;\n      }\n    });\n\n  }\n\n  /**\n   * Location dropdown callback\n   * @param loc - selected location\n   */\n  selectLocation(loc: string) {\n    this.selectedLocation = loc;\n    this.populateDataSet();\n  }\n\n  /**\n   * Snapshot type dropdown callback\n   * @param snapshot - selected snapshot\n   */\n  selectSnapshot(snapshot: string) {\n    this.selectedSnapshot = snapshot;\n    this.populateDataSet();\n  }\n\n  /**\n   * Normalization dropdown callback\n   * @param normalization - selected normalization\n   */\n  selectNormalization(normalization: string, idx: number) {\n    this.selectedNormalization = normalization;\n    this.yAxisTitle = this.yAxisTitles[idx];\n    this.populateDataSet();\n  }\n\n  /**\n   * Init lifecycle hook\n   */\n  ngOnInit(): void {\n    this.populateDataSet();\n  }\n\n}\n","<div class=\"bar-chart-widget\">\n    <div class=\"card-container\">\n        <div class=\"card\">\n            <h3 class=\"card-title\">\n                Covid-19 Cases by Country\n            </h3>\n            <div class=\"btn-group d-flex flex-row pt-2 pb-1 mx-3\">\n                <div dropdown class=\"dropdown\">\n                    <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"locationDropdown\"\n                        data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        {{ selectedLocation }}\n                    </button>\n                    <div class=\"dropdown-menu scrollable-menu\" aria-labelledby=\"locationDropdown\">\n                        <div *ngFor=\"let loc of locations\">\n                            <button class=\"dropdown-item\" type=\"button\" (click)=\"selectLocation(loc)\">{{ loc }}</button>\n                        </div>\n                    </div>\n                </div>\n                <div dropdown class=\"dropdown\">\n                    <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"snapshotDropdown\"\n                        data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        {{ selectedSnapshot | titlecase }}\n                    </button>\n                    <div class=\"dropdown-menu scrollable-menu\" aria-labelledby=\"snapShotDropdown\">\n                        <div *ngFor=\"let snapshot of snapshots\">\n                            <button class=\"dropdown-item\" type=\"button\" (click)=\"selectSnapshot(snapshot)\">{{ snapshot | titlecase }}</button>\n                        </div>\n                    </div>\n                </div> \n                <div dropdown class=\"dropdown\">\n                    <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"normalizationDropdown\"\n                        data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        {{ selectedNormalization | titlecase }}\n                    </button>\n                    <div class=\"dropdown-menu scrollable-menu\" aria-labelledby=\"normalizationDropdown\">\n                        <div *ngFor=\"let normalization of normalizations; let i=index\">\n                            <button class=\"dropdown-item\" type=\"button\" (click)=\"selectNormalization(normalization, i)\">{{ normalization | titlecase }}</button>\n                        </div>\n                    </div>\n                </div>                    \n            </div>\n            <div class=\"card-body\">\n                <div>\n                    <app-stacked-bar-chart [uuid]=\"uuid\" [inputDataSet]=\"dataSet\" [inputDataLabels]=\"dataLabels\" [ylabel]=\"yAxisTitle\"></app-stacked-bar-chart>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, ViewChild, OnChanges, OnDestroy } from '@angular/core';\n\n@Component({\n  selector: 'app-line-chart',\n  templateUrl: './line-chart.component.html',\n  styleUrls: ['./line-chart.component.scss']\n})\nexport class LineChartComponent implements OnInit, OnChanges, OnDestroy {\n  @ViewChild('lineContainer') lineContainer;\n\n  // @Input() uuid: string;\n  // @Input() inputDataSet: any[];\n  // @Input() inputDataLabels: string[];\n\n  // Widget vars\n  alive = false;\n\n  // Data set vars\n  // data: Array<ResultsPerDate> = [];\n  // dataSet: anychart.data.Set = null;\n\n  // Chart vars\n  chart: any = null;\n\n  constructor() { }\n\n  generateChart() {\n    console.log('destroy chart line');\n    this.chart = anychart.line();\n    // get data\n    // create data set on our data\n    let dataSet = anychart.data.set(this.getData());\n    console.log(dataSet);\n\n    // map data for the first series, take x from the zero column and value from the first column of data set\n    let seriesData_1 = dataSet.mapAs({ 'x': 0, 'value': 1 });\n\n    // map data for the second series, take x from the zero column and value from the second column of data set\n    let seriesData_2 = dataSet.mapAs({ 'x': 0, 'value': 2 });\n\n    // map data for the third series, take x from the zero column and value from the third column of data set\n    let seriesData_3 = dataSet.mapAs({ 'x': 0, 'value': 3 });\n\n    // turn on chart animation\n    this.chart.animation(true);\n\n    // set chart padding\n    this.chart.padding([10, 20, 5, 20]);\n\n    // turn on the crosshair\n    this.chart.crosshair()\n      .enabled(true)\n      .yLabel(false)\n      .yStroke(null);\n\n    // set tooltip mode to point\n    this.chart.tooltip().positionMode('point');\n\n    // set yAxis title\n    this.chart.yAxis().title('Number of Bottles Sold (thousands)');\n    this.chart.xAxis().labels().padding(5);\n\n    // create first series with mapped data\n    let series_1 = this.chart.line(seriesData_1);\n    series_1.name('Brandy');\n    series_1.hovered().markers()\n      .enabled(true)\n      .type('circle')\n      .size(4);\n    series_1.tooltip()\n      .position('right')\n      .anchor('left-center')\n      .offsetX(5)\n      .offsetY(5);\n\n    // create second series with mapped data\n    let series_2 = this.chart.line(seriesData_2);\n    series_2.name('Whiskey');\n    series_2.hovered().markers()\n      .enabled(true)\n      .type('circle')\n      .size(4);\n    series_2.tooltip()\n      .position('right')\n      .anchor('left-center')\n      .offsetX(5)\n      .offsetY(5);\n\n    // create third series with mapped data\n    let series_3 = this.chart.line(seriesData_3);\n    series_3.name('Tequila');\n    series_3.hovered().markers()\n      .enabled(true)\n      .type('circle')\n      .size(4);\n    series_3.tooltip()\n      .position('right')\n      .anchor('left-center')\n      .offsetX(5)\n      .offsetY(5);\n\n    // turn the legend on\n    this.chart.legend()\n      .enabled(true)\n      .fontSize(13)\n      .padding([0, 0, 10, 0]);\n\n    // set container id for the chart\n    this.chart.container('lineContainer');\n    // initiate chart drawing\n    this.chart.draw();\n  }\n\n  getData() {\n    return [\n      ['1986', 3.6, 2.3, 2.8, 11.5],\n      ['1987', 7.1, 4.0, 4.1, 14.1],\n      ['1988', 8.5, 6.2, 5.1, 17.5],\n      ['1989', 9.2, 11.8, 6.5, 18.9],\n      ['1990', 10.1, 13.0, 12.5, 20.8],\n      ['1991', 11.6, 13.9, 18.0, 22.9],\n      ['1992', 16.4, 18.0, 21.0, 25.2],\n      ['1993', 18.0, 23.3, 20.3, 27.0],\n      ['1994', 13.2, 24.7, 19.2, 26.5],\n      ['1995', 12.0, 18.0, 14.4, 25.3],\n      ['1996', 3.2, 15.1, 9.2, 23.4],\n      ['1997', 4.1, 11.3, 5.9, 19.5],\n      ['1998', 6.3, 14.2, 5.2, 17.8],\n      ['1999', 9.4, 13.7, 4.7, 16.2],\n      ['2000', 11.5, 9.9, 4.2, 15.4],\n      ['2001', 13.5, 12.1, 1.2, 14.0],\n      ['2002', 14.8, 13.5, 5.4, 12.5],\n      ['2003', 16.6, 15.1, 6.3, 10.8],\n      ['2004', 18.1, 17.9, 8.9, 8.9],\n      ['2005', 17.0, 18.9, 10.1, 8.0],\n      ['2006', 16.6, 20.3, 11.5, 6.2],\n      ['2007', 14.1, 20.7, 12.2, 5.1],\n      ['2008', 15.7, 21.6, 10, 3.7],\n      ['2009', 12.0, 22.5, 8.9, 1.5]\n    ];\n  }\n\n  /**\n   * Destroy an existing chart before re-writing.\n   */\n  destroyChart(): void {\n    console.log('destroy chart line');\n    if (this.chart) {\n      if (this.chart.container()) {\n        this.chart.container().remove();\n      }\n      this.chart = null;\n    }\n  }\n\n  ngOnInit(): void {\n    console.log('line init');\n    this.alive = true;\n    this.destroyChart();\n    this.generateChart();\n    // this.renderer.setProperty(this.el.nativeElement, 'id', this.uuid);\n  }\n\n  ngOnChanges(): void {\n    console.log('on changes line');\n    this.destroyChart();\n    this.generateChart();\n  }\n\n  ngOnDestroy(): void {\n    this.alive = false;\n  }\n\n}\n","<div class=\"line-chart\">\n    <div id=\"lineContainer\" class=\"chart-container\"></div>\n</div>","import { Component, OnInit, OnDestroy, OnChanges, ViewChild, ViewEncapsulation, Input, Renderer2, ElementRef } from '@angular/core';\nimport { ResultsPerDate } from '../../models/data-types';\nimport 'anychart';\n\n@Component({\n  selector: 'app-stacked-bar-chart',\n  templateUrl: './stacked-bar-chart.component.html',\n  styleUrls: ['./stacked-bar-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class StackedBarChartComponent implements OnInit, OnChanges, OnDestroy {\n  @ViewChild('chartContainer') chartContainer;\n\n  @Input() uuid: string;\n  @Input() inputDataSet: any[];\n  @Input() inputDataLabels: string[];\n  @Input() ylabel: string;\n\n  // Widget vars\n  alive = false;\n\n  // Data set vars\n  data: Array<ResultsPerDate> = [];\n  dataSet: anychart.data.Set = null;\n\n  // Chart vars\n  chart: anychart.charts.Cartesian = null;\n\n  /**\n   * Component constructor.\n   */\n  constructor(private renderer: Renderer2, private el: ElementRef) { }\n\n  /**\n   * Generate chart element.\n   */\n  generateChart(): void {\n\n    // Create a data set from input data\n    this.dataSet = anychart.data.set(this.inputDataSet);\n\n    anychart.graphics.useAbsoluteReferences(false);\n\n    // Create chart object\n    this.chart = anychart.column();\n    this.chart.animation(true);\n    this.chart.yScale().stackMode('value');\n\n    // Create series data\n    for (let idx = this.inputDataLabels.length - 1; idx > 0; idx--) {\n      // Map data for each series, take x from the zero column and value from the column of data set\n      this.chart.column(\n        this.dataSet.mapAs({ x: 0, value: idx, label: this.inputDataLabels[idx] }))\n        .name(this.inputDataLabels[idx]\n        );\n    }\n\n    // Turn on legend\n    this.chart.legend().enabled(true).fontSize(13).padding([0, 0, 20, 0]).inverted(true);\n    // Set yAxis labels formatter\n    this.chart.yAxis().labels().format('{%Value}{groupsSeparator: }');\n\n    // Set titles for axes\n    this.chart.yAxis().title(this.ylabel);\n\n    // Set interactivity hover\n    this.chart.interactivity().hoverMode('by-x');\n\n    this.chart.tooltip().displayMode('union');\n    this.chart.tooltip().useHtml(true);\n    this.chart.tooltip().unionFormat(function() {\n      let total = 0;\n      let tip = '';\n      this.points.forEach(element => {\n        tip += element.seriesName + ': ' + element.value.toLocaleString() + '<br>';\n        total += +element.value;\n      });\n      return tip + '<strong>Total: ' + total.toLocaleString() + '</strong>';\n    });\n\n    // Set container id for the chart\n    this.chart.container('chartContainer');\n\n    // Initiate chart drawing\n    this.chart.draw();\n  }\n\n  /**\n   * Destroy an existing chart before re-writing.\n   */\n  destroyChart(): void {\n    if (this.chart) {\n      if (this.chart.container()) {\n        this.chart.container().remove();\n      }\n      this.chart = null;\n    }\n  }\n\n  ngOnInit(): void {\n    this.alive = true;\n    this.renderer.setProperty(this.el.nativeElement, 'id', this.uuid);\n  }\n\n  ngOnChanges(): void {\n    this.destroyChart();\n    this.generateChart();\n  }\n\n  ngOnDestroy(): void {\n    this.alive = false;\n  }\n\n}\n","<div class=\"stacked-bar-chart\">\n    <div id=\"chartContainer\" class=\"chart-container\"></div>\n</div>","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light\" role=\"navigation\">\n    <a class=\"navbar-brand mb-0 h1\" href=\"#\">Quarantine Pilot Covid 19</a>\n</nav>\n\n<app-bar-chart-widget [uuid]=\"'1'\"></app-bar-chart-widget>\n<app-line-chart-widget></app-line-chart-widget>","import { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { LocationsByCountryName } from '../models/data-types';\nimport { CovidReportService } from '../services/covid-report.service';\nimport { forkJoin } from 'rxjs';\nimport { serializeNodes } from '@angular/compiler/src/i18n/digest';\n\n@Component({\n  selector: 'app-line-chart-widget',\n  templateUrl: './line-chart-widget.component.html',\n  styleUrls: ['./line-chart-widget.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class LineChartWidgetComponent implements OnInit {\n  @ViewChild('lineContainer') lineContainer;\n\n  // Widget vars\n  alive = false;\n\n  // Chart vars\n  chart: any = null;\n  // Data set vars\n  data: Array<any> = [];\n\n  // Dropdown options\n  locations = LocationsByCountryName;\n  availableLocations = [];\n  selectedLocations: Array<string> = [];\n\n  windowsAvailable = ['daily', 'weekly', 'biweekly', 'triweekly'];\n  selectedWindow = this.windowsAvailable[1];\n  metrics = ['spread rate', 'daily growth rate', 'fatality rate', 'epidemic control ratio'];\n\n  selectedMetric = this.metrics[0];\n\n  chartDescriptions = [\n    'Rate of growth of cumulative confirmed cases. Similar to rho.',\n    'Ratio of daily confirmed cases over successive days. Value less than 1 for a sustained period indicates inflection point (peak) has been reached.',\n    'Percentage deaths within confirmed cases. Flu fatality rate is 0.001.',\n    'Ratio of daily confirmed cases to threshold per capita. Value less than 1 for 3 weeks implies the epidemic is under control'\n  ];\n  chartDescriptionText = this.chartDescriptions[0];\n  noChartData = true;\n\n  /**\n   * Constructor\n   * @param service \n   */\n  constructor(private service: CovidReportService) {\n    this.createMultiselectLabels();\n  }\n\n  /**\n   * Update selected window to view, redraw graph\n   * @param day - window to get the moving average for\n   */\n  selectWindow(window: string) {\n    this.selectedWindow = window;\n    this.getData(this.selectedLocations, this.selectedWindow, this.selectedMetric);\n  }\n\n  /**\n   * Update selected metric, redraw graph\n   * @param metric - metric type\n   */\n  selectMetric(metric: string, idx: number) {\n    this.selectedMetric = metric;\n    this.getData(this.selectedLocations, this.selectedWindow, this.selectedMetric);\n    this.chartDescriptionText = this.chartDescriptions[idx];\n  }\n\n  /**\n   * Populate the data set to be used for the chart, and then call the chart generation function\n   * @param locations - string array of locations to chart\n   * @param window - window to view the moving average\n   * @param metric - metric type to chart\n   */\n  getData(locations: Array<string>, window: string, metric: string) {\n    this.noChartData = true;\n    const displayData = [];\n    const requestArray = [];\n    const labels = [];\n\n    // Skip empty data sets\n    if (locations.length === 0) {\n      return;\n    }\n\n    // Reset chart data, create list of service calls for all selected locations\n    this.noChartData = false;\n    locations.forEach(loc => {\n      requestArray.push(this.service.getAnnotations(loc));\n      labels.push(loc);\n    });\n\n    // Wait for all service calls to return before proceeding\n    forkJoin(requestArray)\n      // .takeWhile(() => this.alive)\n      .subscribe(allResponses => {\n        // Loop over all responses (one per selected location)\n        for (let i = 0; i < allResponses.length; i++) {\n          const res: any = allResponses[i];\n          let arr = new Array<number>(allResponses.length);\n          if (res.elements) {\n            // Loop over each date of data within each location\n            res.elements.forEach((entry, j) => {\n              // Plot the selected metric\n              let metricData = entry.movingAverageGrowthRate;\n              if (metric === 'spread rate') {\n                metricData = entry.movingAverageEstimatedAlpha;\n              }\n              if (metric === 'fatality rate') {\n                metricData = entry.movingAverageDeathRate;\n              }\n              if (metric === 'epidemic control ratio') {\n                metricData = entry.movingAverageControlAssessment;\n              }\n              // Grab the value based on selected time period\n              metricData.filter(windowInfo => {\n                if (windowInfo[0] === window) {\n                  if (i === 0) {\n                    // Push initial label and empty arrays for data\n                    // 2D array that is organized by:\n                    // [ date1, location1, location2, location3, ... ]\n                    // [ date2, location1, location2, location3, ... ]\n                    // [ date3, location1, location2, location3, ... ]\n                    let arr2 = [entry.date].concat(arr);\n                    displayData.push(arr2);\n                  }\n                  // Set value for the array in the column based on location index\n                  displayData[j][i + 1] = windowInfo[1];\n                }\n              });\n            });\n          }\n        }\n        // Generate the chart\n        this.generateChart(displayData, labels);\n\n      }, err => {\n        // TODO\n      });\n  }\n\n  /**\n   * Generate the line chart with given input data set.\n   * @param data - input data set\n   * @param labels - labels for data set\n   */\n  generateChart(data, labels) {\n    this.destroyChart();\n    this.chart = anychart.line();\n\n    const dataSet = anychart.data.set(data);\n    const seriesData = [];\n    const series = [];\n\n    // turn on chart animation\n    this.chart.animation(true);\n\n    // set chart padding\n    this.chart.padding([10, 20, 5, 20]);\n\n    // turn on the crosshair\n    this.chart.crosshair()\n      .enabled(true)\n      .yLabel(false)\n      .yStroke(null);\n\n    // set tooltip mode to point\n    this.chart.tooltip().positionMode('point');\n\n    // set yAxis title in title case\n    const title = this.selectedMetric.replace(/\\b[a-z]/g, (x) => x.toLocaleUpperCase());\n    this.chart.yAxis().title('Moving Average ' + title);\n    this.chart.xAxis().labels().padding(5);\n\n    // Map data per location\n    labels.forEach((loc, col) => {\n      // mat data set\n      seriesData.push(dataSet.mapAs({ 'x': 0, 'value': col + 1 }));\n\n      // create series data\n      series.push(this.chart.line(seriesData[col]));\n      series[col].name(loc);\n      series[col].hovered().markers()\n        .enabled(true)\n        .type('circle')\n        .size(4);\n      series[col].tooltip()\n        .position('right')\n        .anchor('left-center')\n        .offsetX(5)\n        .offsetY(5);\n\n    });\n\n    // turn the legend on\n    this.chart.legend()\n      .enabled(true)\n      .fontSize(13)\n      .padding([0, 0, 10, 0]);\n\n    // set container id for the chart\n    this.chart.container('lineContainer');\n    // initiate chart drawing\n    this.chart.draw();\n  }\n\n  /**\n   * Set the multi-select options based on the contry list.\n   */\n  createMultiselectLabels() {\n    const locationsMultiselect = [];\n    this.locations.forEach(country => {\n      locationsMultiselect.push({ label: country, value: country });\n    });\n    this.availableLocations = locationsMultiselect;\n  }\n\n  /**\n   * Hide the multiselect panel, kick off chart update.\n   */\n  hidePanel() {\n    this.getData(this.selectedLocations, this.selectedWindow, this.selectedMetric);\n  }\n\n  /**\n   * Destroy an existing chart before re-writing.\n   */\n  destroyChart(): void {\n    if (this.chart) {\n      if (this.chart.container()) {\n        this.chart.container().remove();\n      }\n      this.chart = null;\n    }\n  }\n\n  /**\n   * Init lifecycle hook\n   */\n  ngOnInit(): void {\n    this.alive = true;\n  }\n\n}\n","<div class=\"line-chart-widget\">\n    <div class=\"card-container\">\n        <div class=\"card\">\n            <h3 class=\"card-title\">\n                Covid-19 Annotations/Metrics Comparison by Location\n            </h3>\n            <div class=\"btn-group pt-2 pb-1 mx-3\">\n                <div>\n                    <p-multiSelect [options]=\"availableLocations\" [(ngModel)]=\"selectedLocations\" [dropdownIcon]=\"'pi pi-caret-down'\"\n                        (onPanelHide)=\"hidePanel()\" [filter]=\"true\" [defaultLabel]=\"'Select Countries'\"\n                        [maxSelectedLabels]=\"2\"></p-multiSelect>\n                </div>\n                <div dropdown class=\"dropdown\">\n                    <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"windowDropdown\"\n                        data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        {{ selectedWindow | titlecase }}\n                    </button>\n                    <div class=\"dropdown-menu scrollable-menu\" aria-labelledby=\"windowDropdown\">\n                        <div *ngFor=\"let window of windowsAvailable\">\n                            <button class=\"dropdown-item\" type=\"button\" \n                            (click)=\"selectWindow(window)\">{{ window | titlecase }}</button>\n                        </div>\n                    </div>\n                </div>\n                <div dropdown class=\"dropdown\">\n                    <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"metricDropdown\"\n                        data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        {{ selectedMetric | titlecase }}\n                    </button>\n                    <div class=\"dropdown-menu scrollable-menu\" aria-labelledby=\"metricDropdown\">\n                        <div *ngFor=\"let metric of metrics; let i=index\">\n                            <button class=\"dropdown-item\" type=\"button\"\n                                (click)=\"selectMetric(metric, i)\">{{ metric | titlecase }}</button>\n                        </div>\n                    </div>\n                </div>\n                <p *ngIf=\"!noChartData\" class=\"card-text text-muted pt-1 mx-2\">{{ chartDescriptionText }}</p>\n            </div>\n            <div class=\"card-body\">\n                <div>\n                    <div id=\"lineContainer\" class=\"chart-container\"></div>\n                    <!-- <app-line-chart></app-line-chart> -->\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","export class ResultsPerDate {\n    'province_state': string;\n    'source': string;\n    'deaths': number;\n    'confirmed': number;\n    'recovered': number;\n    'country': string;\n    'long': number;\n    'date': string;\n    'lat': number;\n    'active': number;\n    'activeNormalized':number;\n    'confirmedNormalized':number;\n    'deathsNormalized':number;\n    'recoveredNormalized':number;            \n}\n\nexport class ResultMessage {\n    'snapshots': ResultsPerDate[];\n}\n\nexport const LocationsByCountryName: string[] = [\n    'Afghanistan',\n    'Albania',\n    'Algeria',\n    'Andorra',\n    'Angola',\n    'Antigua and Barbuda',\n    'Argentina',\n    'Armenia',\n    'Australia',\n    'Austria',\n    'Azerbaijan',\n    'Bahamas',\n    'Bahrain',\n    'Bangladesh',\n    'Barbados',\n    'Belarus',\n    'Belgium',\n    'Belize',\n    'Benin',\n    'Bhutan',\n    'Bolivia',\n    'Bosnia and Herzegovina',\n    'Botswana',\n    'Brazil',\n    'Brunei',\n    'Bulgaria',\n    'Burkina Faso',\n    'Burma',\n    'Burundi',\n    'Cabo Verde',\n    'Cambodia',\n    'Cameroon',\n    'Canada',\n    'Central African Republic',\n    'Chad',\n    'Chile',\n    'China',\n    'Colombia',\n    'Congo (Brazzaville)',\n    'Congo (Kinshasa)',\n    'Costa Rica',\n    'Cote d\\'Ivoire',\n    'Croatia',\n    'Cuba',\n    'Cyprus',\n    'Czechia',\n    'Denmark',\n    'Diamond Princess',\n    'Djibouti',\n    'Dominica',\n    'Dominican Republic',\n    'Ecuador',\n    'Egypt',\n    'El Salvador',\n    'Equatorial Guinea',\n    'Eritrea',\n    'Estonia',\n    'Eswatini',\n    'Ethiopia',\n    'Fiji',\n    'Finland',\n    'France',\n    'Gabon',\n    'Gambia',\n    'Georgia',\n    'Germany',\n    'Ghana',\n    'Greece',\n    'Grenada',\n    'Guatemala',\n    'Guinea-Bissau',\n    'Guinea',\n    'Guyana',\n    'Haiti',\n    'Holy See',\n    'Honduras',\n    'Hungary',\n    'Iceland',\n    'India',\n    'Indonesia',\n    'Iran',\n    'Iraq',\n    'Ireland',\n    'Israel',\n    'Italy',\n    'Jamaica',\n    'Japan',\n    'Jordan',\n    'Kazakhstan',\n    'Kenya',\n    'Korea',\n    'Kosovo',\n    'Kuwait',\n    'Kyrgyzstan',\n    'Laos',\n    'Latvia',\n    'Lebanon',\n    'Liberia',\n    'Libya',\n    'Liechtenstein',\n    'Lithuania',\n    'Luxembourg',\n    'Madagascar',\n    'Malawi',\n    'Malaysia',\n    'Maldives',\n    'Mali',\n    'Malta',\n    'Mauritania',\n    'Mauritius',\n    'Mexico',\n    'Moldova',\n    'Monaco',\n    'Mongolia',\n    'Montenegro',\n    'Morocco',\n    'Mozambique',\n    'MS Zaandam',\n    'Namibia',\n    'Nepal',\n    'Netherlands',\n    'New Zealand',\n    'Nicaragua',\n    'Niger',\n    'Nigeria',\n    'North Macedonia',\n    'Norway',\n    'Oman',\n    'Pakistan',\n    'Panama',\n    'Papua New Guinea',\n    'Paraguay',\n    'Peru',\n    'Philippines',\n    'Poland',\n    'Portugal',\n    'Qatar',\n    'Romania',\n    'Russia',\n    'Rwanda',\n    'Saint Kitts and Nevis',\n    'Saint Lucia',\n    'Saint Vincent and the Grenadines',\n    'San Marino',\n    'Sao Tome and Principe',\n    'Saudi Arabia',\n    'Senegal',\n    'Serbia',\n    'Seychelles',\n    'Sierra Leone',\n    'Singapore',\n    'Slovakia',\n    'Slovenia',\n    'Somalia',\n    'South Africa',\n    'South Sudan',\n    'Spain',\n    'Sri Lanka',\n    'Sudan',\n    'Suriname',\n    'Sweden',\n    'Switzerland',\n    'Syria',\n    'Taiwan*',\n    'Tanzania',\n    'Thailand',\n    'Timor-Leste',\n    'Togo',\n    'Trinidad and Tobago',\n    'Tunisia',\n    'Turkey',\n    'Uganda',\n    'Ukraine',\n    'United Arab Emirates',\n    'United Kingdom',\n    'Uruguay',\n    'US',\n    'Uzbekistan',\n    'Venezuela',\n    'Vietnam',\n    'West Bank and Gaza',\n    'Western Sahara',\n    'Yemen',\n    'Zambia',\n    'Zimbabwe'\n\n];\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ResultsPerDate, ResultMessage } from '../models/data-types';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CovidReportService {\n\n  // data = [];\n\n  data: Array<ResultsPerDate> = [];\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  // getResultsByCity(city: string): ResultsPerDate[] {\n  //   this.loadCovidResults().subscribe((res: ResultMessage) => {\n  //     if (res.snapshots) {\n  //       return res.snapshots.filter(item => item.province_state === city);\n  //     }\n  //   });\n  // }\n\n  printResults() {\n    return this.data;\n  }\n\n  getCovidResults(location: string, snapshot: string) {\n    if(snapshot === 'daily')\n      return this.http.get('/assets/snapshots/daily-snapshots/' + location + '_DailySnapshots.json');\n    else\n      return this.http.get('/assets/snapshots/cumulative-snapshots/' + location + '_CumulativeSnapshots.json');\n  }\n  \n\n  getAnnotations(location: string) {\n    return this.http.get('/assets/annotations/' + location + '_Annotations.json');\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}